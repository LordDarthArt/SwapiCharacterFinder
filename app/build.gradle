apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

android {
    buildToolsVersion "32.0.0"

    defaultConfig {
        applicationId "tk.lorddarthart.swapicharacterfinder"
        minSdkVersion min_sdk_version
        compileSdkVersion "android-32"
        targetSdkVersion target_sdk_version
        versionCode versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}-b${versionBuild}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
    }
    signingConfigs {
        debug {}
        release {}
    }
    buildTypes {
        debug {
            versionNameSuffix "-dev"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            versionNameSuffix "-release"
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (output.outputFile != null && output.outputFile.name.endsWith(".apk")) {
                def mFileName = "swapi_character_finder-v${versionName}.apk"
                outputFileName = mFileName
            }
        }
    }
    buildFeatures {
        viewBinding = true
        dataBinding = false
    }
    kapt {
        generateStubs = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Core
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"
    implementation "androidx.core:core-ktx:${androidx_core_version}"

    // Base
    implementation "androidx.appcompat:appcompat:${appcompat_version}"
    implementation "androidx.legacy:legacy-support-v4:${legacy_support_version}"
    implementation "androidx.constraintlayout:constraintlayout:${constraint_layout_version}"
    implementation "androidx.fragment:fragment-ktx:${androidx_fragment_version}"
    implementation "com.google.android.material:material:${material_version}"

    // Data Binding Library
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.android.databinding:compiler:${databinding_library_version}"

    // Kotlin support
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_version}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"

    // Dagger2
    implementation "com.google.dagger:dagger:2.42"
    implementation 'com.google.dagger:dagger-android-support:2.42'
    kapt 'com.google.dagger:dagger-android-processor:2.42'
    kapt "com.google.dagger:dagger-compiler:2.42"

    // OkHttp3 Logging interceptor for logging during Http request.
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_logging_interceptor_version}"

    // Moxy
    implementation "com.github.moxy-community:moxy:${moxy_version}"
    implementation "com.github.moxy-community:moxy-androidx:${moxy_version}"
    implementation "com.github.moxy-community:moxy-android:${moxy_version}"
    implementation "com.github.moxy-community:moxy-ktx:${moxy_version}"
    kapt "com.github.moxy-community:moxy-compiler:${moxy_version}"

    // Room
    implementation "androidx.room:room-runtime:${room_version}"
    implementation "androidx.room:room-rxjava2:${room_version}"
    kapt "androidx.room:room-compiler:${room_version}"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'
}
